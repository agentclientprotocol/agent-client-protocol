{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "anyOf": [
    {
      "$ref": "#/$defs/AnyClientRequest"
    },
    {
      "$ref": "#/$defs/AnyClientResult"
    },
    {
      "$ref": "#/$defs/AnyClientError"
    },
    {
      "$ref": "#/$defs/AnyAgentRequest"
    },
    {
      "$ref": "#/$defs/AnyAgentResult"
    },
    {
      "$ref": "#/$defs/AnyAgentError"
    }
  ],
  "$defs": {
    "AnyAgentError": {
      "anyOf": [
        {
          "$ref": "#/$defs/InitializeError"
        },
        {
          "$ref": "#/$defs/AuthenticateError"
        },
        {
          "$ref": "#/$defs/SendUserMessageError"
        },
        {
          "$ref": "#/$defs/CancelSendMessageError"
        },
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "AnyAgentRequest": {
      "anyOf": [
        {
          "$ref": "#/$defs/InitializeParams"
        },
        {
          "$ref": "#/$defs/AuthenticateParams"
        },
        {
          "$ref": "#/$defs/SendUserMessageParams"
        },
        {
          "$ref": "#/$defs/CancelSendMessageParams"
        }
      ]
    },
    "AnyAgentResult": {
      "anyOf": [
        {
          "$ref": "#/$defs/InitializeResponse"
        },
        {
          "$ref": "#/$defs/AuthenticateResponse"
        },
        {
          "$ref": "#/$defs/SendUserMessageResponse"
        },
        {
          "$ref": "#/$defs/CancelSendMessageResponse"
        }
      ]
    },
    "AnyClientError": {
      "anyOf": [
        {
          "$ref": "#/$defs/StreamAssistantMessageChunkError"
        },
        {
          "$ref": "#/$defs/RequestToolCallConfirmationError"
        },
        {
          "$ref": "#/$defs/PushToolCallError"
        },
        {
          "$ref": "#/$defs/UpdateToolCallError"
        },
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "AnyClientRequest": {
      "anyOf": [
        {
          "$ref": "#/$defs/StreamAssistantMessageChunkParams"
        },
        {
          "$ref": "#/$defs/RequestToolCallConfirmationParams"
        },
        {
          "$ref": "#/$defs/PushToolCallParams"
        },
        {
          "$ref": "#/$defs/UpdateToolCallParams"
        }
      ]
    },
    "AnyClientResult": {
      "anyOf": [
        {
          "$ref": "#/$defs/StreamAssistantMessageChunkResponse"
        },
        {
          "$ref": "#/$defs/RequestToolCallConfirmationResponse"
        },
        {
          "$ref": "#/$defs/PushToolCallResponse"
        },
        {
          "$ref": "#/$defs/UpdateToolCallResponse"
        }
      ]
    },
    "AssistantMessageChunk": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        {
          "type": "object",
          "properties": {
            "thought": {
              "type": "string"
            }
          },
          "required": ["thought"]
        }
      ]
    },
    "AuthenticateError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "AuthenticateParams": {
      "description": "Triggers authentication on the agent side.\n\nThis method should only be called if the initialize response indicates the user isn't already authenticated.\nIf this succceeds then the client can send other messasges to the agent,\nIf it fails then the error message should be shown and the user prompted to authenticate.\n\nThe implementation of authentication is left up to the agent, typically an oauth\nflow is run by opening a browser window in the background.",
      "type": "null"
    },
    "AuthenticateResponse": {
      "type": "null"
    },
    "CancelSendMessageError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "CancelSendMessageParams": {
      "description": "cancelSendMessage allows the client to request that the agent\nstop running. The agent should resolve or reject the current sendUserMessage call.",
      "type": "null"
    },
    "CancelSendMessageResponse": {
      "type": "null"
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/ErrorData"
            },
            {
              "type": "null"
            }
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["code", "message"]
    },
    "ErrorData": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string"
        }
      },
      "required": ["details"]
    },
    "Icon": {
      "type": "string",
      "enum": [
        "fileSearch",
        "folder",
        "globe",
        "hammer",
        "lightBulb",
        "pencil",
        "regex",
        "terminal"
      ]
    },
    "InitializeError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "InitializeParams": {
      "description": "Initialize sets up the agent's state. It should be called before any other method,\nand no other methods should be called until it has completed.\n\nIf the agent is not authenticated, then the client should prompt the user to authenticate,\nand then call the `authenticate` method.\nOtherwise the client can send other messages to the agent.",
      "type": "null"
    },
    "InitializeResponse": {
      "type": "object",
      "properties": {
        "isAuthenticated": {
          "description": "Indicates whether the agent is authenticated and\nready to handle requests.",
          "type": "boolean"
        }
      },
      "required": ["isAuthenticated"]
    },
    "PushToolCallError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "PushToolCallParams": {
      "description": "pushToolCall allows the agent to start a tool call\nwhen it does not need to request permission to do so.\n\nThe returned id can be used to update the UI for the tool\ncall as needed.",
      "type": "object",
      "properties": {
        "content": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ]
        },
        "icon": {
          "$ref": "#/$defs/Icon"
        },
        "label": {
          "type": "string"
        }
      },
      "required": ["label", "icon"]
    },
    "PushToolCallResponse": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/ToolCallId"
        }
      },
      "required": ["id"]
    },
    "RequestToolCallConfirmationError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "RequestToolCallConfirmationParams": {
      "description": "Request confirmation before running a tool\n\nWhen allowed, the client returns a [`ToolCallId`] which can be used\nto update the tool call's `status` and `content` as it runs.",
      "type": "object",
      "properties": {
        "confirmation": {
          "$ref": "#/$defs/ToolCallConfirmation"
        },
        "content": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ]
        },
        "icon": {
          "$ref": "#/$defs/Icon"
        },
        "label": {
          "type": "string"
        }
      },
      "required": ["label", "icon", "confirmation"]
    },
    "RequestToolCallConfirmationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/ToolCallId"
        },
        "outcome": {
          "$ref": "#/$defs/ToolCallConfirmationOutcome"
        }
      },
      "required": ["id", "outcome"]
    },
    "SendUserMessageError": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "const": 429
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/$defs/ErrorData"
                },
                {
                  "type": "null"
                }
              ]
            },
            "message": {
              "type": "string",
              "const": "Rate limit exceeded"
            }
          },
          "required": ["message", "code", "message"]
        },
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "SendUserMessageParams": {
      "description": "sendUserMessage allows the user to send a message to the agent.\nThis method should complete after the agent is finished, during\nwhich time the agent may update the client by calling\nstreamAssistantMessageChunk and other methods.",
      "type": "object",
      "properties": {
        "chunks": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/UserMessageChunk"
          }
        }
      },
      "required": ["chunks"]
    },
    "SendUserMessageResponse": {
      "type": "null"
    },
    "StreamAssistantMessageChunkError": {
      "anyOf": [
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "StreamAssistantMessageChunkParams": {
      "description": "Streams part of an assistant response to the client",
      "type": "object",
      "properties": {
        "chunk": {
          "$ref": "#/$defs/AssistantMessageChunk"
        }
      },
      "required": ["chunk"]
    },
    "StreamAssistantMessageChunkResponse": {
      "type": "null"
    },
    "ToolCallConfirmation": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "description": {
              "type": ["string", "null"]
            },
            "type": {
              "type": "string",
              "const": "edit"
            }
          },
          "required": ["type"]
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": ["string", "null"]
            },
            "type": {
              "type": "string",
              "const": "execute"
            },
            "command": {
              "type": "string"
            },
            "rootCommand": {
              "type": "string"
            }
          },
          "required": ["type", "command", "rootCommand"]
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": ["string", "null"]
            },
            "type": {
              "type": "string",
              "const": "mcp"
            },
            "serverName": {
              "type": "string"
            },
            "toolDisplayName": {
              "type": "string"
            },
            "toolName": {
              "type": "string"
            }
          },
          "required": ["type", "serverName", "toolName", "toolDisplayName"]
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": ["string", "null"]
            },
            "type": {
              "type": "string",
              "const": "fetch"
            },
            "urls": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["type", "urls"]
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "other"
            }
          },
          "required": ["type", "description"]
        }
      ]
    },
    "ToolCallConfirmationOutcome": {
      "oneOf": [
        {
          "description": "Allow this one call",
          "type": "string",
          "const": "allow"
        },
        {
          "description": "Always allow this kind of operation",
          "type": "string",
          "const": "alwaysAllow"
        },
        {
          "description": "Always allow any tool from this MCP server",
          "type": "string",
          "const": "alwaysAllowMcpServer"
        },
        {
          "description": "Always allow this tool from this MCP server",
          "type": "string",
          "const": "alwaysAllowTool"
        },
        {
          "description": "Reject this tool call",
          "type": "string",
          "const": "reject"
        },
        {
          "description": "The generation was canceled before a confirming",
          "type": "string",
          "const": "cancel"
        }
      ]
    },
    "ToolCallContent": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "markdown"
            },
            "markdown": {
              "type": "string"
            }
          },
          "required": ["type", "markdown"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "diff"
            },
            "newText": {
              "type": "string"
            },
            "oldText": {
              "type": ["string", "null"]
            },
            "path": {
              "type": "string"
            }
          },
          "required": ["type", "path", "oldText", "newText"]
        }
      ]
    },
    "ToolCallId": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0
    },
    "ToolCallStatus": {
      "oneOf": [
        {
          "description": "The tool call is currently running",
          "type": "string",
          "const": "running"
        },
        {
          "description": "The tool call completed successfully",
          "type": "string",
          "const": "finished"
        },
        {
          "description": "The tool call failed",
          "type": "string",
          "const": "error"
        }
      ]
    },
    "UpdateToolCallError": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "const": 0
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/$defs/ErrorData"
                },
                {
                  "type": "null"
                }
              ]
            },
            "message": {
              "type": "string",
              "const": "Tool call waiting for confirmation"
            }
          },
          "required": ["message", "code", "message"]
        },
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "const": 1
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/$defs/ErrorData"
                },
                {
                  "type": "null"
                }
              ]
            },
            "message": {
              "type": "string",
              "const": "Tool call was rejected by the user"
            }
          },
          "required": ["message", "code", "message"]
        },
        {
          "$ref": "#/$defs/Error"
        }
      ]
    },
    "UpdateToolCallParams": {
      "description": "updateToolCall allows the agent to update the content and status of the tool call.\n\nThe new content replaces what is currently displayed in the UI.\n\nThe [`ToolCallId`] is included in the response of\n`pushToolCall` or `requestToolCallConfirmation` respectively.",
      "type": "object",
      "properties": {
        "content": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolCallContent"
            },
            {
              "type": "null"
            }
          ]
        },
        "status": {
          "$ref": "#/$defs/ToolCallStatus"
        },
        "toolCallId": {
          "$ref": "#/$defs/ToolCallId"
        }
      },
      "required": ["toolCallId", "status", "content"]
    },
    "UpdateToolCallResponse": {
      "type": "null"
    },
    "UserMessageChunk": {
      "description": "A part in a user message",
      "anyOf": [
        {
          "description": "A chunk of text in user message",
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        {
          "description": "A file path mention in a user message",
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": ["path"]
        }
      ]
    }
  }
}
